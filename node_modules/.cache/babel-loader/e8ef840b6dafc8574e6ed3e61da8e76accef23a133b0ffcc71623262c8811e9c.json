{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport request from \"./request\";\nfunction Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(request.fetchNetflixOriginals);\n      setMovie(request.data.results[/* selects one item randomly */\n      Math.floor(Math.random() * request.data.results.length - 1)]);\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  /*\n      return (\n          <header \n              className=\"banner\"\n                  style={{\n                      backgroundSize: \"cover\",\n                      backgroundImage: `url(\n                          \"https://image.tmdb.org/t/p/original/${movie?.backdrop.path}\"\n                          )`,\n                      backgroundPosition: \"center center\",\n                  }}\n          > \n              <div className='banner__contents'>\n                  <h1>\n                      {movie?.title || movie?.name || movie?.original_name}\n                  </h1>\n                  { /* div > 2 buttons */\n}\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n_c = Banner;\n{/* description*/}\n//            </div>\n//      </header>\n//    )\n// }\n\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","axios","request","Banner","_s","movie","setMovie","fetchData","get","fetchNetflixOriginals","data","results","Math","floor","random","length","_c","$RefreshReg$"],"sources":["/Users/shanashly/Projects/netflix-clone/src/Banner.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport request from \"./request\";\n\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(request.fetchNetflixOriginals);\n            setMovie(\n                request.data.results[\n                    /* selects one item randomly */\n                    Math.floor(Math.random() * request.data.results.length - 1)\n                ]\n            );\n            return request;\n        }\n        fetchData();\n    }, []);\n\n/*\n    return (\n        <header \n            className=\"banner\"\n                style={{\n                    backgroundSize: \"cover\",\n                    backgroundImage: `url(\n                        \"https://image.tmdb.org/t/p/original/${movie?.backdrop.path}\"\n                        )`,\n                    backgroundPosition: \"center center\",\n                }}\n        > \n            <div className='banner__contents'>\n                <h1>\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n                { /* div > 2 buttons */}\n                { /* description*/}\n//            </div>\n  //      </header>\n//    )\n// }\n\n\nexport default Banner"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,eAAeQ,SAASA,CAAA,EAAG;MACvB,MAAML,OAAO,GAAG,MAAMD,KAAK,CAACO,GAAG,CAACN,OAAO,CAACO,qBAAqB,CAAC;MAC9DH,QAAQ,CACJJ,OAAO,CAACQ,IAAI,CAACC,OAAO,CAChB;MACAC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,OAAO,CAACQ,IAAI,CAACC,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC,CAEnE,CAAC;MACD,OAAOb,OAAO;IAClB;IACAK,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAuC;AAACH,EAAA,CAjC/BD,MAAM;AAAAa,EAAA,GAANb,MAAM;AAkCC,CAAE;AAClB;AACE;AACF;AACA;;AAGA,eAAeA,MAAM;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}